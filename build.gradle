plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	mavenCentral()
	flatDir {
		dirs 'libs'
	}

	maven { url "https://jitpack.io" }
	maven { url "https://cursemaven.com" }
	maven { url "https://maven.fabricmc.net/" }
	maven { url "https://maven.architectury.dev/" }
	maven { url "https://repo.maven.apache.org/maven2/" }
	maven { url "https://repo.spongepowered.org/maven/" }
	maven { url "https://repo.essentialsx.net/releases/" }
	maven { url "https://maven.neoforged.net/releases/" }
	maven { url "https://files.minecraftforge.net/maven/" }
	maven { url "https://thedarkcolour.github.io/KotlinForForge/" }
	maven { url "https://papermc.io/repo/repository/maven-public/" }
	maven { url "https://maven.impactdev.net/repository/development/" }
	maven { url "https://maven.impactdev.net/raepository/development" }
	maven { url "https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc" }
	maven { url "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
	maven { url "https://repo.extendedclip.com/content/repositories/placeholderapi/" }
	maven {
		url "https://maven.nucleoid.xyz/"
		name = "Nucleoid"
	}
	maven {
		url "https://oss.sonatype.org/content/repositories/snapshots"
		name = "Sonatype Snapshots"
	}
	maven {
		url "https://s01.oss.sonatype.org/content/repositories/snapshots"
		name = "Sonatype 01 Snapshots"
	}
}

fabricApi {
	configureDataGeneration {
		client = true
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	implementation "net.kyori:adventure-api:4.17.0"
	implementation "net.kyori:adventure-text-minimessage:4.21.0"
	implementation "net.impactdev.impactor.api:economy:5.3.0"
	modImplementation include("net.kyori:adventure-platform-fabric:5.14.1")
	modImplementation("dev.architectury:architectury-fabric:${project.architectury_version}")


	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	include(modImplementation("me.lucko:fabric-permissions-api:0.3.1"))
	modImplementation name: "Cobblemon-fabric-1.6.1+1.21.1_2"

	include(modImplementation name: "api-repack-3.1.1-1.21.x")

}


processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}